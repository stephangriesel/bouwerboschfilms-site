---
// src/layouts/MainLayout.astro
import ImageMarquee from '../components/ImageMarquee.astro';
import '../styles/global.css';

export interface Props {
    title?: string;
}

const { title = 'My Parallax Site' } = Astro.props;
---
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>
    </head>
    <body>
        <div class="main-container">
            <main class="left-content">
                
                <nav class="navigation">
                    <a href="/">Home</a>
                    <a href="#about">About</a>
                    <a href="#services">Services</a>
                    <a href="#contact">Contact</a>
                </nav>

                <ImageMarquee />

                <slot /> </main>

            <aside class="right-sidebar">
            </aside>
        </div>

        <script>
            document.addEventListener('DOMContentLoaded', () => {
                
                const scrollContainer = document.querySelector<HTMLElement>('.left-content');
                const parallaxSections = document.querySelectorAll<HTMLElement>('.parallax-section');

                // This 'if' check is the main entry point
                if (scrollContainer) {

                    // --- THE FIX ---
                    // Create a new constant that TypeScript *knows* is an HTMLElement.
                    // We use 'scroller' inside all nested functions.
                    const scroller = scrollContainer; 
                    
                    let ticking = false;
                    let currentIsMobile = window.innerWidth <= 900;

                    function updateSkewOnScroll() {
                        const maxSkew = currentIsMobile ? 12 : 7;
                        let containerHeight, containerRectTop;

                        if (currentIsMobile) {
                            containerHeight = window.innerHeight;
                            containerRectTop = 0;
                        } else {
                            // This is now 100% safe
                            containerHeight = scroller.clientHeight;
                            containerRectTop = scroller.getBoundingClientRect().top;
                        }

                        const containerCenterY = containerHeight / 2;

                        for (const section of parallaxSections) {
                            const rect = section.getBoundingClientRect();
                            const elementTopInContainer = rect.top - containerRectTop;
                            const elementCenterInContainer = elementTopInContainer + rect.height / 2;
                            const distanceFromCenter = elementCenterInContainer - containerCenterY;
                            const percentage = distanceFromCenter / containerCenterY;
                            const clampedPercentage = Math.max(-1.5, Math.min(1.5, percentage));
                            const skewValue = clampedPercentage * maxSkew;

                            section.style.transform = `skewY(${skewValue}deg)`;
                        }
                    }

                    function onScroll() {
                        if (!ticking) {
                            window.requestAnimationFrame(() => {
                                updateSkewOnScroll();
                                ticking = false;
                            });
                            ticking = true;
                        }
                    }

                    function onResize() {
                        const newIsMobile = window.innerWidth <= 900;
                        if (newIsMobile === currentIsMobile) return;

                        if (currentIsMobile) {
                            window.removeEventListener('scroll', onScroll);
                        } else {
                            // This is now 100% safe
                            scroller.removeEventListener('scroll', onScroll);
                        }

                        if (newIsMobile) {
                            window.addEventListener('scroll', onScroll);
                        } else {
                            // This is now 100% safe
                            scroller.addEventListener('scroll', onScroll);
                        }

                        currentIsMobile = newIsMobile;
                        updateSkewOnScroll();
                    }

                    // --- INITIAL SETUP ---
                    window.addEventListener('resize', onResize);
                    
                    if (currentIsMobile) {
                        window.addEventListener('scroll', onScroll);
                    } else {
                        // This is now 100% safe
                        scroller.addEventListener('scroll', onScroll);
                    }
                    
                    updateSkewOnScroll();

                } else {
                    console.error("Scroll container '.left-content' not found.");
                }
            });
        </script>
    </body>
</html>